#!/bin/bash

## Print the proper command to use in vim-dispatch :Dispatch call
## So that vim will know right compiler error format
## Usage:
##  my_make file_path arguments
##

file_path="$1"
shift

if [ -e Makefile ] 
then
  #  If Makefile is present in current dir - just run make
  echo "make run"
elif [ -e BUILD ]
then
  #  If Bazel build file is present in current dir - just run bazel test ...
  echo "bazel test ..."
elif [ "${file_path: -3}" == ".py" ]
then
  echo "python3 $file_path"
elif [ "${file_path: -2}" == ".c" ]
then
  echo "gcc ${file_path} -o _exec && (./_exec ; rm _exec) " 
elif [ "${file_path: -2}" == ".R" ]
then
  echo "R -f $file_path"
elif [ "${file_path: -3}" == ".go" ]
then
  echo "go run $file_path"
elif [ "${file_path: -4}" == ".pas" ]
then
  echo "fpc -o_exec ${file_path} && (./_exec ; rm _exec) " 
elif [ "${file_path: -3}" == ".pp" ]
then
  echo "fpc -o_exec ${file_path} && (./_exec ; rm _exec) " 
elif [ "${file_path: -3}" == ".md" ]
then
  echo "pandoc -f markdown -t latex --latex-engine=xelatex --variable mainfont='DejaVu Serif' -o _a.pdf ${file_path} && (zathura _a.pdf&; sleep 1; rm _a.pdf) " 
elif [ "${file_path: -3}" == ".sh" ]
then
  echo "./$file_path"
else
  # Return make by default
  echo "make"
fi
